"""init

Revision ID: 03af13d13c99
Revises: 
Create Date: 2022-12-28 17:36:19.224669

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '03af13d13c99'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('subscription_level',
    sa.Column('type', sa.Enum('FREE', 'PREMIUM', name='subscriptionlevelenum'), nullable=False),
    sa.Column('valid_from', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('valid_until', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.PrimaryKeyConstraint('type', 'id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('users',
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_staff', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('policy', sa.Boolean(), nullable=False),
    sa.Column('sub_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['sub_id'], ['subscription_level.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('id')
    )
    op.create_table('quiz',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('img', sa.String(), nullable=True),
    sa.Column('author_id', sa.UUID(), nullable=False),
    sa.Column('type', sa.Enum('SURVEY', 'TEST', name='quiztype'), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('question',
    sa.Column('quiz_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('img', sa.String(), nullable=True),
    sa.Column('file', sa.String(), nullable=True),
    sa.Column('type', sa.Enum('SINGLE', 'MULTIPLE', 'NOTHING', name='questiontype'), nullable=False),
    sa.Column('correct_count', sa.Integer(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['quiz_id'], ['quiz.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('quiz_solution',
    sa.Column('quiz_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('grade', sa.NUMERIC(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['quiz_id'], ['quiz.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('ans_option',
    sa.Column('question_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('img', sa.String(), nullable=True),
    sa.Column('file', sa.String(), nullable=True),
    sa.Column('is_correct', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('question_solution',
    sa.Column('question_id', sa.UUID(), nullable=False),
    sa.Column('quiz_solution_id', sa.UUID(), nullable=False),
    sa.Column('grade', sa.NUMERIC(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], ),
    sa.ForeignKeyConstraint(['quiz_solution_id'], ['quiz_solution.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('ans_option_solution',
    sa.Column('ans_option_id', sa.UUID(), nullable=False),
    sa.Column('question_solution_id', sa.UUID(), nullable=False),
    sa.Column('is_correct', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['ans_option_id'], ['ans_option.id'], ),
    sa.ForeignKeyConstraint(['question_solution_id'], ['question_solution.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('ans_option_solution')
    op.drop_table('question_solution')
    op.drop_table('ans_option')
    op.drop_table('quiz_solution')
    op.drop_table('question')
    op.drop_table('quiz')
    op.drop_table('users')
    op.drop_table('subscription_level')
    op.execute("DROP TYPE subscriptionlevel")
    op.execute("DROP TYPE quiztype")
    op.execute("DROP TYPE questiontype")
    # ### end Alembic commands ###
